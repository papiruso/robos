/**
 * @author Dave Gabaraev <dave@uncodegem.com>
 * @description This module will help you use the ROBOKASSA payment system for javaScript / nodeJS.
 *
 * @description default config: MD5 HASH
 * DOCS ROBOKASSA - https://docs.robokassa.ru/
 */

const md5 = require('md5');

const ROBOKASSA_PAY_URL = 'https://auth.robokassa.ru/Merchant/Index.aspx';

/**
 * @var mrhLogin - Store identifier specified in the “Technical settings”
 * section of your store (Идентификатор магазина, прописанный в разделе «Технические настройки» Вашего магазина)
 *
 * @var mrhPass1 - merchant pass1 here
 *
 * @var outSum - The amount credited to the store's account, in currency units OutCurrLabel.
 * (Сумма, зачисленная на счет магазина, в единицах валюты OutCurrLabel.)
 *
 * @var invId - Store account number generated by you.
 * (Номер счета в магазине сгенерированный вами.)
 *
 * @var SignatureValue - Checksum is a hash, a number in hexadecimal and in upper case (0-9, A-F), calculated by the method specified in the Technical settings of the store.
 * (Контрольная сумма - хэш, число в 16-ричной форме и в верхнем регистре (0-9, A-F), рассчитанное методом указанным в Технических настройках магазина.)
*/

class Robos {
	constructor(config) {
		const {
			mrhLogin,
			mrhPass1,
			mrhPass2,
			outSumCurrency,
		} = config;

		this.mrhLogin = mrhLogin;
		this.mrhPass1 = mrhPass1;
		this.mrhPass2 = mrhPass2;
		this.outSumCurrency = outSumCurrency;
	}

	/**
	 * @description generate signature (формирование подписи)
	 * @param {string} outSum
	 * @param {number} invId
	 */
	generateSignature(outSum, invId) {
		return md5(`${this.mrhLogin}:${outSum}:${invId}${this.outSumCurrency ? `:${this.outSumCurrency}:` : ':'}${this.mrhPass1}`);
	}

	/**
	 * @description creating a link to redirect or go to the payment page
	 * (создание ссылки для редиректа или перехода на страницу оплаты)
	 * @param {string} outSum
	 * @param {number} invId
	 * @param {string} description - order description generated by you
	 */
	generateUrl(outSum, invId, description) {
		const signature = this.generateSignature(outSum, invId);
		const query = `?MerchantLogin=${this.mrhLogin}&InvId=${invId}&Culture=ru&Encoding=utf-8&OutSum=${outSum}&SignatureValue=${signature}&Description=${description}`;

		return `${ROBOKASSA_PAY_URL}${query}`;
	}

	/**
	 * @description checks for successful payment (проверка на успешную оплату)
	 * @param {string} outSum
	 * @param {number} invId
	 * @param {string} SignatureValue
	 */
	checkPay(outSum, invId, SignatureValue) {
		return SignatureValue === md5(`${outSum}:${invId}:${this.mrhPass2}`).toUpperCase();
	}
}

module.exports = Robos;

